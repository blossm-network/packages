substitutions:
  _NETWORK: sm.network
  _GCP_PROJECT: smn-core
  _GCP_REGION: us-central1
  _GCP_DNS_ZONE: network
  _MEMORY: 128Mi
  _SERVICE: core
  _CONTEXT: auth-gateway
  _NODE_ENV: staging
  _ENV_NAME_SPECIFIER: -staging
  _ENV_URI_SPECIFIER: staging.
steps:
  - name: node:10.16.0
    entrypoint: yarn
    args:
      - install
  - name: node:10.16.0
    entrypoint: yarn
    args:
      - test:unit
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - us.gcr.io/${_GCP_PROJECT}${_ENV_NAME_SPECIFIER}/${_SERVICE}.${_CONTEXT}
      - .
  - name: node:10.16.0
    entrypoint: bash
    args:
      - -c
      - |-
        cat >> .env <<- EOM
        NETWORK=local
        SERVICE=${_SERVICE}
        CONTEXT=${_CONTEXT}
        NODE_ENV=local
        PORT=80
        MAIN_CONTAINER_NAME=main
        CONTAINER_REGISTRY=us.gcr.io/${_GCP_PROJECT}${_ENV_NAME_SPECIFIER}
        GCP_PROJECT=${_GCP_PROJECT}-staging
        GCP_REGION=${_GCP_REGION}
        GCP_SECRET_BUCKET=smn-staging-secrets
        MONGODB_ADMIN_DATABASE=admin
        MONGODB_ADMIN_USER=admin
        MONGODB_ADMIN_USER_PASSWORD=password
        MONGODB_USER=tester
        MONGODB_USER_PASSWORD=password
        MONGODB_PROTOCOL=mongodb
        MONGODB_HOST=mongodb
        MONGODB_DATABASE=testing

        EOM
  - name: docker/compose:1.15.0
    args:
      - up
      - -d
  - name: docker/compose:1.15.0
    args:
      - ps
  - name: node:10.16.0
    entrypoint: bash
    args:
      - -c
      - yarn test:integration || exit 0
    env:
      - MAIN_CONTAINER_NAME=main
      - NETWORK=local
      - SERVICE=${_SERVICE}
      - CONTEXT=${_CONTEXT}
  - name: docker/compose:1.15.0
    args:
      - logs
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - us.gcr.io/${_GCP_PROJECT}${_ENV_NAME_SPECIFIER}/${_SERVICE}.${_CONTEXT}
  - name: gcr.io/cloud-builders/gcloud
    args:
      - beta
      - run
      - deploy
      - ${_GCP_REGION}-${_SERVICE}-${_CONTEXT}
      - --image=us.gcr.io/${_GCP_PROJECT}${_ENV_NAME_SPECIFIER}/${_SERVICE}.${_CONTEXT}
      - --platform=managed
      - --memory=${_MEMORY}
      - --allow-unauthenticated
      - --project=${_GCP_PROJECT}${_ENV_NAME_SPECIFIER}
      - --region=${_GCP_REGION}
      - --set-env-vars=NODE_ENV=${_NODE_ENV},NETWORK=${_GCP_REGION}.${_ENV_URI_SPECIFIER}${_NETWORK},SERVICE=${_SERVICE},CONTEXT=${_CONTEXT},GCP_PROJECT=${_GCP_PROJECT}${_ENV_NAME_SPECIFIER},GCP_REGION=${_GCP_REGION},GCP_SECRET_BUCKET=smn${_ENV_NAME_SPECIFIER}-secrets,
      - --labels=service=${_SERVICE},context=${_CONTEXT},
  - name: gcr.io/cloud-builders/gcloud
    args:
      - beta
      - dns
      - record-sets
      - transaction
      - start
      - --zone=${_GCP_DNS_ZONE}
      - --project=${_GCP_PROJECT}
  - name: gcr.io/cloud-builders/gcloud
    args:
      - beta
      - dns
      - record-sets
      - transaction
      - add
      - ghs.googlehosted.com.
      - --name=auth.${_ENV_URI_SPECIFIER}${_NETWORK}
      - --zone=${_GCP_DNS_ZONE}
      - --type=CNAME
      - --ttl=86400
      - --project=${_GCP_PROJECT}
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - gcloud beta dns record-sets transaction execute --zone=${_GCP_DNS_ZONE}
        --project=${_GCP_PROJECT} || exit 0
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - gcloud beta dns record-sets transaction abort --zone=${_GCP_DNS_ZONE}
        --project=${_GCP_PROJECT} || exit 0
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - gcloud beta run domain-mappings create --platform=managed
        --service=${_GCP_REGION}-${_SERVICE}-${_CONTEXT}
        --domain=auth.${_ENV_URI_SPECIFIER}${_NETWORK}
        --project=${_GCP_PROJECT}${_ENV_NAME_SPECIFIER} --region=${_GCP_REGION}
        || exit 0
