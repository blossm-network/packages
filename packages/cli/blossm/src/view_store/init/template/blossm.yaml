#
# Give your view-store a unique name, and specify which context it's in.
#
name: some-name
context: some-context

#
# Give your view-store a schema.
#
# How to write a schema -> https://mongoosejs.com/docs/schematypes.html
# Types and validators should always be specified,
# and default values and required flags should be set if intended.
#
schema:
  name: String

#
# Specify how this view-store can be indexed.
#
# How to write indexes -> https://mongoosejs.com/docs/guide.html#indexes
# Queries to the store that aren't indexed will be rejected.
# In other words, full collection scans are not allowed.
#
# Queries can only be issued against indexed properties.
#
# A nested array is used to accomodate index options.
#
indexes:
  - - name: 1

#
# The following properties are used for automated testing.
#
testing:
  #
  # Add examples for testing query, index, and stream functionality.
  #
  examples:
    #
    # Test the query capability of the view-store.
    #
    # The first item contains an 'update' property that should be
    # an object that's written to the view-store, and a 'get' with
    # the expected result when the view-store is read. You can optionally add
    # more examples to test, in which you can include 'query' parameters
    # if you want to refine your query and test indexes.
    #
    # The 'second' object works the same way as 'first', but should contain
    # different values in order to test overwritting.
    #
    - update:
        name: some-name
      get:
        name: some-name
    - update:
        name: some-other-name
      get:
        name: some-other-name

#don't change
procedure: view-store
